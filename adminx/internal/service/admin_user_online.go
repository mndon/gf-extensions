// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package service

import (
	"context"
	"github.com/mndon/gf-extensions/adminx/internal/api"
	"github.com/mndon/gf-extensions/adminx/internal/model"
	"github.com/mndon/gf-extensions/adminx/internal/model/entity"
)

type (
	IAdminUserOnline interface {
		Invoke(ctx context.Context, params *model.AdminUserOnlineParams)
		SaveOnline(ctx context.Context, params *model.AdminUserOnlineParams)
		CheckUserOnline(ctx context.Context)
		GetOnlineListPage(ctx context.Context, req *api.AdminUserOnlineSearchReq, hasToken ...bool) (res *api.AdminUserOnlineSearchRes, err error)
		UserIsOnline(ctx context.Context, token string) bool
		DeleteOnlineByToken(ctx context.Context, token string) (err error)
		ForceLogout(ctx context.Context, ids []int) (err error)
		GetInfosByIds(ctx context.Context, ids []int) (onlineList []*entity.AdminUserOnline, err error)
	}
)

var (
	localAdminUserOnline IAdminUserOnline
)

func AdminUserOnline() IAdminUserOnline {
	if localAdminUserOnline == nil {
		panic("implement not found for interface IAdminUserOnline, forgot register?")
	}
	return localAdminUserOnline
}

func RegisterAdminUserOnline(i IAdminUserOnline) {
	localAdminUserOnline = i
}
